import React, { Component } from 'react';
import Checkbox from './share/checkbox';

let objectChecked = [];

class checkbox extends Component {
    constructor(props) {
        super(props);
        this.state = {
            fruits: [
                { id: 1, value: 'apple', isChecked: false },
                { id: 2, value: 'banana', isChecked: false },
                { id: 3, value: 'mango', isChecked: false },
                { id: 4, value: 'papaya', isChecked: false },
                { id: 5, value: 'kiwi', isChecked: false },
                { id: 6, value: 'pineapple', isChecked: false },
                { id: 7, value: 'strawberry', isChecked: false },
                { id: 8, value: 'vhgv', isChecked: false },
                { id: 9, value: 'orange', isChecked: false },
                { id: 10, value: 'peach', isChecked: false },
                { id: 11, value: 'melon', isChecked: false }
            ],
            allChecked: false,
        }
    }

    handleAllChecked = (event) => {
        let itemName = event.target.value; //get target event value in let
        let isCheckedItem = event.target.checked; //get chacked event value in let
        let itemIndex = event.target.id   //get chacked event id in itemIndex


        this.setState(prevState => {
            let { fruits, allChecked } = prevState;
            if (itemName === "selectAll") {
                allChecked = isCheckedItem;
                fruits = fruits.map((item) => ({ ...item, isChecked: true }))
                if (allChecked === true) {
                    objectChecked = [];
                    for (let i = 0; i < fruits.length; i++) {
                        objectChecked.push({ "id": fruits[i].id })
                    }
                }
                else {
                    fruits = fruits.map((item) => ({ ...item, isChecked: false }));
                    objectChecked = [];
                }
                console.log("id to show", objectChecked);
            }

            // single elemnt

            else {
                fruits.map((items, index) => {
                    if (items.id === parseInt(itemIndex)) {
                        items.isChecked = isCheckedItem;
                        if (fruits[index].isChecked === true) {
                            objectChecked.push({ "id": items.id });
                            console.log("item checked", fruits[index].isChecked)
                        }
                        else {
                            objectChecked = objectChecked.filter(itm => {
                                return itm.id != itemIndex;
                            })
                        }
                    }


                    else {
                        if (objectChecked.length < fruits.length) {
                            allChecked = false;
                            console.log("true", objectChecked.length, fruits.length, allChecked);
                        }
                        else if (objectChecked.length === fruits.length) {
                            console.log("false", objectChecked.length, fruits.length)
                            allChecked = true;
                        }
                        console.log("index", itemIndex)
                        console.log("obj", objectChecked);
                    }
                })
            }
            ///
            return { fruits, allChecked }
        })
    }


    render() {

        return (
            <div>
                <div>
                   <h2>select items {objectChecked.length} && select All <span style={{fontSize:'12px', }}>{this.state.allChecked ? "True" : "False"}</span></h2>
                </div>
                <Checkbox type="checkbox" defaultValue="selectAll" label="Select All" checked={this.state.allChecked} onChange={this.handleAllChecked} />
                {this.state.fruits && this.state.fruits.length > 0 && this.state.fruits.map((fruits, index) => {
                    return (
                       <div key={index}>
                            <Checkbox
                            // key={fruits.id}
                            type="checkbox"
                            id={fruits.id}
                            label={fruits.value}
                            defaultValue={fruits.value}
                            checked={fruits.isChecked}
                            onChange={this.handleAllChecked}
                        />
                       </div>
                    )
                })
                }
            </div>
        );
    }
}

export default checkbox;